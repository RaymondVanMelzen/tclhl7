#!/usr/bin/env tclsh

namespace eval HL7 {
	%{include msg.tcl}
	
	%{include query.tcl}

	%{include get_set.tcl}
}

proc hl7 {cmd args} {
	switch -exact -- $cmd {
		parse { return [eval {HL7::Message::parse} $args] }
		data { return [eval {HL7::Message::data} $args] }

		query { return [eval {HL7::Query::query} $args] }

		get {
			switch -regexp -- [lindex $args 0] {
				{^reversed?$} {
					# get reverse
					# get reversed
					return [eval {HL7::GetSet::get_reverse} [lrange $args 1 end]]
				}

				{^values?$} {
					# get value
					# get values
					return [eval {HL7::GetSet::get_values} [lrange $args 1 end]]
				}

				default {
					# get
					return [eval {HL7::GetSet::get} $args]
				}
			}
		}
		set { return [eval {HL7::GetSet::_set} $args] }
		clear { return [eval {HL7::GetSet::clear} $args] }
		delete { return [eval {HL7::GetSet::delete} $args] }
		add { return [eval {HL7::GetSet::add} $args] }
		insert {
			switch -exact -- [lindex $args 0] {
				before {
					# insert before
					return [eval {HL7::GetSet::insert_before} [lrange $args 1 end]]
				}

				after {
					# insert after
					return [eval {HL7::GetSet::insert_after} [lrange $args 1 end]]
				}

				default {
					# insert
					return [eval {HL7::GetSet::insert} $args]
				}
			}
		}
		insert_before { return [eval {HL7::GetSet::insert_before} $args] }
		insert_after { return [eval {HL7::GetSet::insert_after} $args] }

		each {
			set body [concat {HL7::GetSet::each} $args]
			uplevel 1 $body
		}

		default {
			error "Unknown command: $cmd"
		}
	}
}
