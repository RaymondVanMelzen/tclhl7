#!/usr/bin/env tclsh

package require tcltest

source tests/customMatchers.tcl
source hl7.1/example.tcl
source hl7.1/hl7.tcl

namespace eval HL7 {

	tcltest::test get_separators-1.0 {Test pulling separators from a message} -body {
		return [Message::get_separators $example_msg \n]
	} -result {
		SEGMENT \n
		FIELD |
		REPETITION ~
		COMPONENT ^
		SUBCOMPONENT &
		ESCAPE \\
	} -match array




	tcltest::test parse-1.0 {Test parsing a message} -body {
		# get OBX.3.0.1.0 -> 3.3.0.1.0
		return [lindex [Message::parse $example_msg \n] 0 3 3 0 1 0]
	} -result "GLUCOSE"




	tcltest::test parse-1.0 {Test parsing a message's MSH segment (since it is off by one).} -body {
		return [lindex [Message::parse $example_msg \n] 0 0 0]
	} -result "MSH"

	tcltest::test parse-1.0 {Test parsing a message's MSH segment (since it is off by one).} -body {
		return [lindex [Message::parse $example_msg \n] 0 0 1]
	} -result "|"

	tcltest::test parse-1.0 {Test parsing a message's MSH segment (since it is off by one).} -body {
		return [lindex [Message::parse $example_msg \n] 0 0 2]
	} -result "^~\\&"

	tcltest::test parse-1.0 {Test parsing a message's MSH segment (since it is off by one).} -body {
		return [lindex [Message::parse $example_msg \n] 0 0 3 0 0 0]
	} -result "GHH LAB"




	tcltest::test has_been_parsed-1.0 {Test the "has_been_parsed" proc is true (1) with a parsed message.} -body {
		return [Message::has_been_parsed [Message::parse $example_msg \n]]
	} -result 1




	tcltest::test has_been_parsed-1.0 {Test the "has_been_parsed" proc is false (0) with an unparsed message.} -body {
		return [Message::has_been_parsed $example_msg]
	} -result 0





	tcltest::test data-1.0 {Test the "data" proc.} -body {
		return [Message::data [Message::parse $example_msg \n]]
	} -result $example_msg
}
